continue
user
product
continue
let(:product) {create(:product)}
 let(:user) { create(:user, role: 'supplier') }
:user
user
continue
    end
      end
        product.product_image.attach(io: File.open('home/dell/Downloads/painting.jpg'), filename: 'painting.jpg', content_type: 'image/jpg')
      after(:build) do |product|
      price { Faker::Commerce.price(range: 10.0..1000.0) }
      description { Faker::Lorem.sentence }
      name { Faker::Commerce.product_name }
      association :user
factory :product do
c
n
continue
n
next
@user
@user.id
user.id
n
user.id
params
n
c
user.id
user
c
@user
c
params
panas
@user
c
@user
 User.find(params[:user_id])
params
params[:user_id]
@user
c
user.id
user
c
user
n
c
user
:user
n
:user
let(:user) { create(:user, role: 'supplier') }
c
user
n
c
user
c
product[name]
c
fill_in 'name', with: 'Sample Product'
fill_in 'Name', with: 'Sample Product'
c
n
user
 let(:user) { create(:user, role: 'supplier') }
n
user
 let(:user) { create(:user, role: 'supplier') }
user
c
user
expect(page).to have_content('New Product')
=>  8:       expect(page).to have_content('New Product')
c
 expect(page).to have_content('New Product')
n
c
n
product
user
c
email
n
c
n
 JsonWebToken.encode
n
c
user[:password_digest]
s=User.find_by(password_digest: user.password)
user.password
User.find_by(password_digest: user.password)
m
user
n
c
 User.find_by_email(user.email)
n
c
User.find_by(password: user.password)
n
user
n
c
n
user
n
c
n
user
user&.find_by(password: user.password)
n
c
C    has_secure_password
n
c
authenticate(user.password)
User.find_by_email(user.email)
user.password
user.email
user
n
c
user.email
n
user
n
c
n
c
n
user
c
user
n
c
user
c
user
c
user
n
c
user
c
user.email
user
n
c
user
